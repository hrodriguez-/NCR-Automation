# pyproject.toml - Poetry configuration
[tool.poetry]
name = "area-boundary-converter"
version = "0.1.0"
description = "Speckle Automate function to convert Revit Area boundaries to surfaces"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
specklepy = "^2.21.4"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.3.0"
ruff = "^0.0.271"
pydantic-settings = "^2.3.0"
pytest = "^7.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
    "D",  # pydocstyle
    "I",  # isort
]

[tool.ruff.pydocstyle]
convention = "google"

# ---

# Dockerfile
FROM python:3.11-slim

# We install poetry to generate a list of dependencies which will be required by our application
RUN pip install poetry==1.8.4

# We set the working directory to be the /home/speckle directory; all of our files will be copied here.
WORKDIR /home/speckle

# Copy all of our code and assets from the local directory into the /home/speckle directory of the container.
# We also ensure that the user 'speckle' owns these files, so it can access them
# This assumes that the Dockerfile is in the same directory as the rest of the code
COPY . /home/speckle

# Using poetry, we generate a list of requirements, save them to requirements.txt, and then use pip to install them
RUN poetry export --format requirements.txt --output /home/speckle/requirements.txt && pip install --requirement /home/speckle/requirements.txt

# ---

# .github/workflows/main.yml - GitHub Actions workflow
name: Build and Deploy Function

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
    
    - name: Install dependencies
      run: poetry install
    
    - name: Run tests
      run: poetry run pytest
    
    - name: Build Docker image
      run: |
        docker build -t speckle-function:${{ github.sha }} .
    
    - name: Deploy to Speckle Automate
      env:
        SPECKLE_AUTOMATE_FUNCTION_ID: ${{ secrets.SPECKLE_AUTOMATE_FUNCTION_ID }}
        SPECKLE_AUTOMATE_FUNCTION_PUBLISH_TOKEN: ${{ secrets.SPECKLE_AUTOMATE_FUNCTION_PUBLISH_TOKEN }}
      run: |
        # Deployment logic handled by Speckle's infrastructure
        echo "Function deployed with commit: ${{ github.sha }}"