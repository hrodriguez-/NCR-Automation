name: 'build and deploy Speckle functions'
on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  publish-automate-function-version:
    env:
      FUNCTION_SCHEMA_FILE_NAME: functionSchema.json
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Debug: Check if secrets are accessible
      - name: Debug secrets availability
        run: |
          echo "Checking secret availability..."
          if [ -n "${{ secrets.SPECKLE_FUNCTION_TOKEN }}" ]; then
            echo "✅ SPECKLE_FUNCTION_TOKEN is available"
          else
            echo "❌ SPECKLE_FUNCTION_TOKEN is missing"
          fi
          if [ -n "${{ secrets.SPECKLE_FUNCTION_ID }}" ]; then
            echo "✅ SPECKLE_FUNCTION_ID is available"
          else
            echo "❌ SPECKLE_FUNCTION_ID is missing"
          fi

      - name: Debug secret values (REMOVE AFTER TESTING)
        run: |
          echo "Token length: ${#SPECKLE_TOKEN}"
          echo "Function ID length: ${#SPECKLE_FUNCTION_ID}"
          echo "Token starts with: ${SPECKLE_TOKEN:0:8}..."
          echo "Function ID starts with: ${SPECKLE_FUNCTION_ID:0:8}..."
        env:
              # Use secrets directly in the environment to avoid issues with GitHub Actions
          SPECKLE_TOKEN: ${{ secrets.SPECKLE_FUNCTION_TOKEN }}
          SPECKLE_FUNCTION_ID: ${{ secrets.SPECKLE_FUNCTION_ID }}

      # Validate required secrets exist with better error handling
      - name: Validate secrets
        run: |
          MISSING_SECRETS=""
          
          if [ -z "${{ secrets.SPECKLE_FUNCTION_TOKEN }}" ]; then
            echo "❌ ERROR: SPECKLE_FUNCTION_TOKEN secret is required"
            MISSING_SECRETS="SPECKLE_FUNCTION_TOKEN "
          fi
          
          if [ -z "${{ secrets.SPECKLE_FUNCTION_ID }}" ]; then
            echo "❌ ERROR: SPECKLE_FUNCTION_ID secret is required"
            MISSING_SECRETS="${MISSING_SECRETS}SPECKLE_FUNCTION_ID "
          fi
          
          if [ -n "$MISSING_SECRETS" ]; then
            echo "Missing secrets: $MISSING_SECRETS"
            echo "Please add these secrets in Settings > Secrets and variables > Actions"
            exit 1
          fi
          
          echo "✅ All required secrets are present"
          
      - name: Install basic dependencies
        run: |
          pip install --upgrade pip
          pip install specklepy==2.21.4
          pip install pytest==7.4.2
          pip install black==23.3.0
          pip install ruff==0.0.271
          pip install mypy==1.3.0
          pip install pydantic-settings==2.3.0
          
      - name: Install speckle-automate with fallbacks
        run: |
          echo "Attempting to install speckle-automate..."
          
          # Method 1: Try PyPI first (in case it's been published)
          if pip install speckle-automate; then
            echo "✅ Installed speckle-automate from PyPI"
          else
            echo "PyPI installation failed, trying GitHub..."
            
            # Method 2: Try GitHub with HTTPS
            if pip install git+https://github.com/specklesystems/speckle-automate-python.git; then
              echo "✅ Installed speckle-automate from GitHub"
            else
              echo "GitHub installation failed, trying alternative repositories..."
              
              # Method 3: Try alternative repository names/locations
              for repo in "speckle-automate" "speckle-automate-sdk" "speckle-py-automate"; do
                echo "Trying repository: $repo"
                if pip install git+https://github.com/specklesystems/$repo.git; then
                  echo "✅ Installed from specklesystems/$repo"
                  break
                fi
              done
            fi
          fi
          
          # Verify installation
          python -c "try: import speckle_automate; print('✅ speckle_automate imported successfully')
          except ImportError as e: print(f'❌ Import failed: {e}'); exit(1)"
          
      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            python -m pytest tests/ -v
          else
            echo "No tests directory found, skipping tests"
          fi
        continue-on-error: true

      - name: Run code formatting check
        run: |
          python -m black --check .
        continue-on-error: true
          
      - name: Extract functionInputSchema
        id: extract_schema
        run: |
          echo "Generating function schema..."
          python main.py generate_schema ${{ env.FUNCTION_SCHEMA_FILE_NAME }}
          if [ -f "${{ env.FUNCTION_SCHEMA_FILE_NAME }}" ]; then
            echo "✅ Schema file generated successfully"
            echo "Schema content:"
            cat ${{ env.FUNCTION_SCHEMA_FILE_NAME }}
          else
            echo "❌ Schema file not found"
            exit 1
          fi
          
      - name: Speckle Automate Function - Build and Publish
        uses: specklesystems/speckle-automate-github-composite-action@0.8.1
        with:
          speckle_automate_url: 'https://automate.speckle.dev'
          speckle_token: ${{ secrets.SPECKLE_FUNCTION_TOKEN }}
          speckle_function_id: ${{ secrets.SPECKLE_FUNCTION_ID }}
          speckle_function_input_schema_file_path: ${{ env.FUNCTION_SCHEMA_FILE_NAME }}
          speckle_function_command: 'python -u main.py run'